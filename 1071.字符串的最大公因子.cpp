/*
 * @lc app=leetcode.cn id=1071 lang=cpp
 *
 * [1071] 字符串的最大公因子
 */
#include <string>
#include <algorithm>
using namespace std;
class Solution
{
public:
    inline bool isDivide(const string &str, const string &pattern)
    {
        if (str.size() % pattern.size() != 0)
        {
            return false;
        }
        int offset = pattern.size();
        for (auto i = str.begin(); i != str.end(); i += offset)
        {
            string tmp(i, i + offset);
            if (tmp != pattern)
            {
                return false;
            }
        }
        return true;
    }
    string gcdOfStrings(string str1, string str2)
    {
        for (auto i = str2.begin(); i != str2.end(); ++i)
        {
            string pattern(str2.begin(), i + 1);
            if (isDivide(str1, pattern) && isDivide(str2, pattern))
            {
                return pattern;
            }
        }
        return "";
    }
};
//连续 两题超奇怪，自己电脑测试和leetcode的测试都是能过的
// × Wrong Answer
//   × 58/103 cases passed (N/A)
//   × Testcase: "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
// "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
//   × Answer:
//   × Stdout: '"A"'

// √ Finished
//   √ Your Input
//   √ Output (0 ms): "A"
//   × Expected (N/A):
//   √ Stdout: